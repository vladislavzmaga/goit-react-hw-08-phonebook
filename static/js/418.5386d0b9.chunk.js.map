{"version":3,"file":"static/js/418.5386d0b9.chunk.js","mappings":"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","sources":["components/Box/Box.styled.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/Box/Box.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactsList/ContactsItem/ContactsItem.styled.js","components/ContactsList/ContactsItem/ContactsItem.jsx","components/ContactsList/Contacts.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  width: 400px;\n  margin: 40px auto;\n  background-color: darkgrey;\n  border-radius: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Forms = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLable = styled.label`\n  position: relative;\n  font-size: 16px;\n  font-weight: bold;\n  width: 250px;\n  height: 20px;\n  margin: 0 auto;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const FormInput = styled.input`\n  position: absolute;\n  margin-left: 5px;\n  height: 14px;\n  right: 0;\n`;\n\nexport const FormButton = styled.button`\n  background-color: blue;\n  border: none;\n  color: white;\n  cursor: pointer;\n  width: 100px;\n  height: 30px;\n  border-radius: 5px;\n  transition: transform 300ms;\n  margin: 10px auto 0;\n  :hover {\n    transform: scale(1.1);\n    background-color: blueviolet;\n  }\n`;\n","import React from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsSlice';\n\nimport { Forms, FormLable, FormInput, FormButton } from './Form.styled';\n\nexport const Form = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const hundleSubmit = evt => {\n    evt.preventDefault();\n    const name = evt.target.name.value;\n    const number = evt.target.number.value;\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n    addUser(newContact);\n    evt.target.reset();\n  };\n\n  const addUser = newContact => {\n    let isContains = false;\n    contacts.map(contact => {\n      if (contact.name === newContact.name) {\n        isContains = true;\n      }\n      return isContains;\n    });\n    isContains\n      ? Notiflix.Report.failure(\n          'Error',\n          `${newContact.name} is already in contacts`,\n          'close'\n        )\n      : dispatch(addContact(newContact));\n  };\n\n  return (\n    <Forms onSubmit={hundleSubmit}>\n      <FormLable>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLable>\n      <FormLable>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLable>\n      <FormButton type=\"submit\">Save contact</FormButton>\n    </Forms>\n  );\n};\n","import PropTypes from 'prop-types';\n\nimport { Box } from './Box.styled';\n\nexport const Wrapper = ({ children }) => {\n  return <Box>{children}</Box>;\n};\n\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  color: blueviolet;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Wrapper, Title } from './Section.styled';\n\nexport const Section = ({ children, title }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ContactsName = styled.p`\n  font-weight: bold;\n`;\n\nexport const ContactTel = styled.span`\n  display: inline-flex;\n  align-items: center;\n  font-weight: bold;\n  color: green;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin: auto 0;\n  background-color: blue;\n  border: none;\n  color: white;\n  cursor: pointer;\n  width: 100px;\n  height: 30px;\n  border-radius: 5px;\n  transition: transform 300ms;\n\n  :hover {\n    transform: scale(1.1);\n    background-color: blueviolet;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsSlice';\n\nimport {\n  ContactsItem,\n  ContactsName,\n  ContactTel,\n  DeleteBtn,\n} from './ContactsItem.styled';\n\nexport const ContactsListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const deleteUser = evt => {\n    const currentId = evt.target.dataset.id;\n    dispatch(deleteContact(currentId));\n  };\n\n  return (\n    <ContactsItem>\n      <ContactsName>{name}</ContactsName>\n      <ContactTel>{number}</ContactTel>\n      <DeleteBtn type=\"button\" data-id={id} onClick={deleteUser}>\n        delete\n      </DeleteBtn>\n    </ContactsItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n  list-style: none;\n\n  margin: 0 auto;\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import { ContactsListItem } from './ContactsItem/ContactsItem';\nimport { ContactList } from './Contacts.styled';\nimport { useSelector } from 'react-redux';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filters = useSelector(state => state.contacts.filter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filters.toLowerCase())\n  );\n\n  return (\n    <ContactList>\n      {filteredContacts.map(item => {\n        const { name, number, id } = item;\n\n        return (\n          <ContactsListItem key={id} name={name} number={number} id={id} />\n        );\n      })}\n    </ContactList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 15px;\n`;\n\nexport const FilterTitile = styled.h2`\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  margin: 0 auto;\n  width: 200px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filteredContacts } from 'redux/contactsSlice';\n\nimport { FilterWrapper, FilterTitile, FilterInput } from './Filter.styled';\n\nexport const Filter = ({ title }) => {\n  const dispatch = useDispatch();\n\n  const searchByName = evt => {\n    const filter = evt.target.value;\n    dispatch(filteredContacts(filter));\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterTitile>{title}</FilterTitile>\n      <FilterInput type=\"text\" name=\"filter\" onChange={searchByName} />\n    </FilterWrapper>\n  );\n};\n\nFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { Form } from '../../components/Form/Form';\nimport { Wrapper } from '../../components/Box/Box';\nimport { Section } from '../../components/Section/Section';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { Filter } from '../../components/Filter/filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contactsSlice';\nimport { Title } from '../../components/Section/Section.styled';\n\nconst Contacts = () => {\n  const { items, error, isLoading } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Section title={'Phonebook'}>\n        <Form />\n      </Section>\n      {isLoading && <Title>Loading...</Title>}\n      {error && (\n        <Title>\n          Error:\n          {error}\n        </Title>\n      )}\n      {items.length > 0 && (\n        <Section title={'Contacts'}>\n          <Filter title={'Find contacts by name'} />\n          <ContactsList />\n        </Section>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["Box","styled","Forms","FormLable","FormInput","FormButton","Form","contacts","useSelector","state","items","dispatch","useDispatch","addUser","newContact","isContains","map","contact","name","Notiflix","addContact","onSubmit","evt","preventDefault","target","value","number","id","nanoid","reset","type","pattern","title","required","Wrapper","children","Title","Section","ContactsItem","ContactsName","ContactTel","DeleteBtn","ContactsListItem","onClick","currentId","dataset","deleteContact","ContactList","ContactsList","filters","filter","filteredContacts","toLowerCase","includes","item","FilterWrapper","FilterTitile","FilterInput","Filter","onChange","error","isLoading","useEffect","fetchContacts","length"],"sourceRoot":""}